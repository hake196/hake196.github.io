<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>代码评审</title>
      <link href="/2019/09/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/"/>
      <url>/2019/09/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="代码评审"><a href="#代码评审" class="headerlink" title="代码评审"></a>代码评审</h1><h2 id="对于代码格式化的个人感想"><a href="#对于代码格式化的个人感想" class="headerlink" title="对于代码格式化的个人感想"></a>对于代码格式化的个人感想</h2><p><strong>关于写代码,我也是到处随便复制粘贴,能运行就好了.但是这样会给以后的你观看造成麻烦,会非常后悔以前的自己到底在写什么屎.所以代码缩进等等一定要规定好,刚刚逛论坛发现别人正在讨论这个问题,并给出了各式各样的解决方案，决定截图收藏一波,提醒下自己.</strong></p><h2 id="论坛截图"><a href="#论坛截图" class="headerlink" title="论坛截图"></a>论坛截图</h2><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190924230618.png" alt="代码格式化的争论"></p><p><strong>论坛地址：</strong><br><a href="https://www.v2ex.com/t/603629#reply109" target="_blank" rel="noopener">https://www.v2ex.com/t/603629#reply109</a></p><h2 id="代码评审概念"><a href="#代码评审概念" class="headerlink" title="代码评审概念"></a>代码评审概念</h2><ul><li>地址</li></ul><p><a href="https://baike.baidu.com/item/%E4%BB%A3%E7%A0%81%E8%AF%84%E5%AE%A1/8960487?fromtitle=Code%20Review&amp;fromid=8466134&amp;fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/%E4%BB%A3%E7%A0%81%E8%AF%84%E5%AE%A1/8960487?fromtitle=Code%20Review&amp;fromid=8466134&amp;fr=aladdin</a></p><h2 id="代码评审的相关帖子"><a href="#代码评审的相关帖子" class="headerlink" title="代码评审的相关帖子"></a>代码评审的相关帖子</h2><ul><li><p><a href="https://blog.csdn.net/Cy_LightBule/article/details/87877255" target="_blank" rel="noopener">版本管理 —— Code Review</a></p></li><li><p><a href="https://www.jianshu.com/p/f79c4e948954" target="_blank" rel="noopener">CodeReview规范</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 水文一篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 水文一篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法刷题网站</title>
      <link href="/2019/09/23/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E7%BD%91%E7%AB%99/"/>
      <url>/2019/09/23/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h1 id="算法刷题网站"><a href="#算法刷题网站" class="headerlink" title="算法刷题网站"></a>算法刷题网站</h1><ul><li><a href="https://www.luogu.org/training/mainpage" target="_blank" rel="noopener">洛谷</a></li></ul><p>目前在刷的网站,网站加载真慢😓</p><ul><li><a href="https://leetcode-cn.com/" target="_blank" rel="noopener">leetcode</a></li></ul><h1 id="算法网站总结"><a href="#算法网站总结" class="headerlink" title="算法网站总结"></a>算法网站总结</h1><p><a href="https://blog.csdn.net/p312011150/article/details/81911024" target="_blank" rel="noopener">https://blog.csdn.net/p312011150/article/details/81911024</a></p><h1 id="一个ACMer的感想-大佬牛逼"><a href="#一个ACMer的感想-大佬牛逼" class="headerlink" title="一个ACMer的感想,大佬牛逼"></a>一个ACMer的感想,大佬牛逼</h1><p><a href="https://www.singularity2u.top/2019/06/13/2018-2019-%E5%A4%A7%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">https://www.singularity2u.top/2019/06/13/2018-2019-%E5%A4%A7%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E6%80%BB%E7%BB%93/</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法训练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java开源项目9.23</title>
      <link href="/2019/09/23/Java%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE2019.9.23/"/>
      <url>/2019/09/23/Java%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE2019.9.23/</url>
      
        <content type="html"><![CDATA[<h1 id="java开源项目"><a href="#java开源项目" class="headerlink" title="java开源项目"></a>java开源项目</h1><ul><li><a href="https://github.com/halo-dev/halo" target="_blank" rel="noopener">halo</a></li><li><a href="https://github.com/looly/hutool" target="_blank" rel="noopener">hutool</a></li><li><a href="https://github.com/sqshq/piggymetrics" target="_blank" rel="noopener">piggymetrice</a></li><li><a href="https://github.com/hankcs/HanLP" target="_blank" rel="noopener">HanlLP</a></li><li><a href="https://github.com/hansonwang99" target="_blank" rel="noopener">Spring-Boot-In-Action</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源前端UI框架</title>
      <link href="/2019/09/23/%E5%BC%80%E6%BA%90%E5%89%8D%E7%AB%AFUI%E6%A1%86%E6%9E%B6/"/>
      <url>/2019/09/23/%E5%BC%80%E6%BA%90%E5%89%8D%E7%AB%AFUI%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="开源前端UI框架"><a href="#开源前端UI框架" class="headerlink" title="开源前端UI框架"></a>开源前端UI框架</h1><p>1.layui<br>2.AdminLTE<br>3.vue-Element-Admin<br>4.tabler<br>5.Gentelella<br>6.ng2-admin<br>7.ant-desgin-pro<br>8.blur-admin<br>9.vue-admin<br>10.iview-admin<br>11.material-dashboard</p>]]></content>
      
      
      <categories>
          
          <category> 水文一篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 水文一篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好文收藏9.21</title>
      <link href="/2019/09/21/%E5%A5%BD%E6%96%87%E6%94%B6%E8%97%8F9-21/"/>
      <url>/2019/09/21/%E5%A5%BD%E6%96%87%E6%94%B6%E8%97%8F9-21/</url>
      
        <content type="html"><![CDATA[<h1 id="好文收藏9-21-npm环境配置-hexo安装流程"><a href="#好文收藏9-21-npm环境配置-hexo安装流程" class="headerlink" title="好文收藏9.21(npm环境配置,hexo安装流程)"></a>好文收藏9.21(npm环境配置,hexo安装流程)</h1><p><strong>使用hexo+github搭建免费个人博客详细教程</strong></p><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></p><p><strong>hexo官方网站</strong></p><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></p><p><strong>nodejs、npm 环境配置步骤(windows版本)</strong></p><p><a href="https://juejin.im/post/5a92b735f265da4e761fea22" target="_blank" rel="noopener">https://juejin.im/post/5a92b735f265da4e761fea22</a></p>]]></content>
      
      
      <categories>
          
          <category> 好文收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程和V模型</title>
      <link href="/2019/09/20/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%92%8CV%E6%A8%A1%E5%9E%8B/"/>
      <url>/2019/09/20/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%92%8CV%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="软件工程和V模型"><a href="#软件工程和V模型" class="headerlink" title="软件工程和V模型"></a>软件工程和V模型</h1><h2 id="软件开发过程模型"><a href="#软件开发过程模型" class="headerlink" title="软件开发过程模型"></a>软件开发过程模型</h2><blockquote><p><strong>在软件开发的几十年实践中，人们总结了很多软件开发模型用来描述和表示一个复杂的开发过程，如：</strong></p><ul><li>瀑布模型</li><li>快速原型模型</li><li>螺旋模型</li></ul></blockquote><p><strong>软件测试与软件的开发模式有着紧密的联系，作为一名测试人员，应该充分理解软件的开发模式，以便找准自己在其中的位置，从而发挥自身的价值.</strong></p><ul><li><h3 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h3><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190920223305.png" alt="瀑布模型"> </li></ul><ol><li><p>是线性模型的一种,在所有模型中占有重要地位,是所有其他模型的一个基础.</p></li><li><p>每个阶段执行一次,按线性顺序进行软件开发.</p></li></ol><p>瀑布模型各阶段详细解读：</p><p>1.需求分析</p><p>开发的过程需要分析,想好我们要做什么.</p><p>2.设计</p><p>把需求分析好之后,设计出一个设计稿(UI设计稿),做出所谓的模型、图片</p><p>3.编码</p><p>把ui设计师设计的设计稿做成代码,就是所谓的编码工作</p><p>4.实现</p><p>写代码实现最终结果（功能）</p><p>5.测试工程师的切入点(有了代码实现之后,切入点就是实现的那一步)</p><p>软件测试》完成》维护这个过程中,还有个用户的需求发生变更的小插曲,所以测试工程师的工作还有个小的循环迭代.</p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190922212016.png" alt></p><p>测试的切入点：</p><blockquote><p><strong>测试阶段处于软件实现后,必须在代码完成后留出足够的时间给测试活动,否则将导致测试不充分,很多问题到项目后期才暴露</strong></p></blockquote><p>瀑布模型的缺点:</p><p><strong>瀑布模型不好地方在于,测试人员在测试阶段时,编码已经完成了.如果有些问题(如需求模糊，没有搞清楚)在编码之前没有改好，在测试阶段才发现，程序改动会很容易出现问题(bug),因为软件中有许多模块，而各模块之间联系紧密(模块之间相互影响、相互制约)</strong></p><p>瀑布模型总结：</p><p><strong>优点：</strong></p><p>1.开发的各个阶段比较清晰</p><p>2.强调早期计划及需求调查</p><p>3.适合需求稳定的产品开发</p><p><strong>缺点：</strong></p><p><em>简单来说,就是不灵活</em></p><p>1.依赖于早期的需求调查,不适合需求的变化</p><p>2.单一流程不可逆</p><p>3.风险往往延至后期才显露,失去尽早纠正的机会.</p><p>4.问题在项目后期才开始暴露.</p><p>5.前面未发现的错误会传递并扩散,到后面的阶段,可能导致项目失败</p><p><strong>改良：</strong></p><p>沿用瀑布模型的线性思想,细化了各个阶段,在某些重要的阶段之间掺入迭代的思想.</p><h2 id="软件测试-amp-软件工程"><a href="#软件测试-amp-软件工程" class="headerlink" title="软件测试&amp;软件工程"></a>软件测试&amp;软件工程</h2><ul><li><p>软件测试与软件工程息息相关,软件测试是软件工程<code>组成</code>中不可或缺的<code>一部分</code>.</p></li><li><p>在软件工程、项目管理、质量管理得到规范化应用的企业,软件测试也会进行得比较顺利,软件测试发挥的价值也会更大.</p></li></ul><p>也就是说在企业中,如果你的项目管理特别规范化,那么整个软件的工程进行会更加的顺利</p><ul><li>要关注软件工程、质量管理以及配置管理与软件测试的关系;在不同的开发模式下,如何进行软件测试.</li></ul><p>开发模式有瀑布型、螺旋型、迭代型、快速型等等模型,各种模型有各自优缺点。瀑布型在软件开发中最为常用,虽然存在缺点,但软件工程的管理者在此模型基础上进行了改良变更,发明了快速开发模型,更好地适应需求频繁更变的情况</p><p>❗ 补充</p><p>敏捷型开发模型：</p><blockquote><p>只要有需求分析的过程,就邀请用户(客户)过来,一起讨论分析需求的合理性。在设计阶段完成后,把用户、程序员、测试工程师叫在一起开个会,看看需求分析、设计的工作是否满足需求,考虑下测试时候，现在的设计会不会在以后发生什么情况(如：需求不符合用户要求),进行小型的迭代更新</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190922231418.png" alt="灵魂画师"></p><h2 id="测试模型"><a href="#测试模型" class="headerlink" title="测试模型"></a>测试模型</h2><p>随着测试过程的管理和发展,测试人员通过大量的实践,从而总结出了不少测试模型,如常见的<code>V模型</code>、<code>W模型</code>、H模型等.<code>这些模型与开发紧密结合</code>,对测试活动进行了抽象,成为了测试过程管理的重要参考依据.</p><p><del>❓ 测试的过程和软件开发的过程一样吗？是否有很多看上去很专业,似乎很有内涵的模型呢？</del></p><h3 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h3><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190924194516.png" alt="V模型示意图"></p><ul><li>V模型是具有代表意义的测试模型,旨在改进软件开发的效率和效果;</li><li>V模型推出之前,人们通常把测试过程作为在需求分析、概要设计、详细设计、编码全部<code>完成之后的一个阶段</code>,尽管当时已经出现了测试工作会<code>占用这个项目周期一半的时间</code>,但是大多数人认为测试只是一个收尾工作;V模型在这个时候推出,就是为了改变之前行业的普遍认识.</li><li>V模型本身是<code>软件开发中瀑布模型的变种</code>,它反映了测试活动与分析和设计的关系.</li><li>V模型标明了测试过程中本身存在的不同阶段,从左到右,描述了开发过程和测试过程的阶段对应关系.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190924195220.png" alt="V模型"></p><h3 id="V模型的剖析"><a href="#V模型的剖析" class="headerlink" title="V模型的剖析"></a>V模型的剖析</h3><h4 id="开发阶段-V的左边"><a href="#开发阶段-V的左边" class="headerlink" title="开发阶段(V的左边)"></a>开发阶段(V的左边)</h4><ul><li>需求分析</li></ul><blockquote><p><strong>用户需求、业务需求、需求规格说明书(需求文档)</strong></p></blockquote><p>1.软件开发之前,一定要进行分析(包括用户需求、业务需求).用户需求和业务需求都了解之后,把它们都总结好写入文档(就是规格说明书),让用户签字确认</p><ul><li>概要设计</li></ul><blockquote><p><strong>系统架构、模块划分、模块与模块之间的接口</strong></p></blockquote><p>1.系统架构:看采用的是B/S结构(浏览器/服务器)还是C/S(客户端/服务端)结构;</p><p>2.模块划分:例如bilibili网站中有音频区啊、鬼畜区啊等等,这些就划分成了一个个小小的模块;</p><p>3.模块与模块之间的接口:例如一个购物网站,当你在没有登录账号的情况下,想完成一个点击收藏的动作,购物网站会跳转到用户登录的模块提示的登录.</p><ul><li>详细设计<blockquote><p><strong>模块内部实现的逻辑和方法</strong></p></blockquote></li></ul><p>1.例如一个使用微信过程,当用户成功登录后,选择好友,在输入框输入文字或者图片,发送成功.这个过程就是逻辑.</p><ul><li>编码<blockquote><p><strong>实现上面的设计</strong></p></blockquote></li></ul><p>1.代码实现上面的设计</p><h4 id="测试阶段-V的右边"><a href="#测试阶段-V的右边" class="headerlink" title="测试阶段(V的右边)"></a>测试阶段(V的右边)</h4><ul><li>单元测试<blockquote><p>又称模块测试,针对软件设计中的最小单位—程序模块,进行正确性检查的测试工作.单元测试需要从程序的内部结构出发设计测试用例。多个模块可以平行地独立进行单元测试.</p></blockquote></li></ul><p>单元定义:C中指一个函数,java中只一个类,在图形化的软件中,单元一般指一个窗口,1个菜单.例一个购物网站：首页、购物列表、购物详情页、购物列表页等等</p><ul><li>集成测试<blockquote><p>又叫组装测试,通常在单元测试的基础上,将所有程序模块进行有序的、递增的测试.重点测试不同模块的接口部分(就是把单元测试拼在一起来测试)。</p></blockquote></li></ul><p>❓ 为什么单元测试完了,又要进行集成测试</p><p>app中的每个模块都是互相联系的,单一模块测试可能没有问题,但是各模块连在一起测试就有可能会出错.</p>]]></content>
      
      
      <categories>
          
          <category> 测试理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件测试的原则(二)</title>
      <link href="/2019/09/19/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9A%84%E5%8E%9F%E5%88%99-%E4%BA%8C/"/>
      <url>/2019/09/19/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9A%84%E5%8E%9F%E5%88%99-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="软件测试的原则-详细解读"><a href="#软件测试的原则-详细解读" class="headerlink" title="软件测试的原则(详细解读)"></a>软件测试的原则(详细解读)</h1><h2 id="所有的测试都应追溯到用户需求"><a href="#所有的测试都应追溯到用户需求" class="headerlink" title="所有的测试都应追溯到用户需求"></a>所有的测试都应追溯到用户需求</h2><p><strong>比如各个视频网站的一个点击视频暂停的功能,功能理想的实现是点击视频暂停按钮时视频就会立马暂停，但所谓这样的视频暂停功能仅仅是我们理想的样子，客户可能需要的是暂停视频时就会跳出广告，客户的真正的想法是暂停视频时会有贴片广告，所以所有的测试都应追溯到用户的需求</strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190919210001.png" alt="广告"><br></fancybox></p><h2 id="应当把“尽早和不断地测试”作为座右铭"><a href="#应当把“尽早和不断地测试”作为座右铭" class="headerlink" title="应当把“尽早和不断地测试”作为座右铭"></a>应当把“尽早和不断地测试”作为座右铭</h2><p><strong>尽早:我们测试记录的活动越早,我们发现问题就越早，修改难度就会降的越低,但越早进入测试，花费的时间、人力、金钱也会上升,所以要和部门商量并解决</strong></p><p><strong>不断:开发的团队就算平均每个成员的水平都很高，但写出来的程序还会存在bug,所以要不断的测试</strong></p><h2 id="测试工作应该由独立的专业测试机构来完成"><a href="#测试工作应该由独立的专业测试机构来完成" class="headerlink" title="测试工作应该由独立的专业测试机构来完成"></a>测试工作应该由独立的专业测试机构来完成</h2><p><strong>程序员也可以自己测试自己开发的程序，但是个人有限，总会有些测试点没有测试到这么全面、到位，软件质量不能保证，所以专业人做专业的事,测试的工作就可以让测试人员来测(大型的公司一般都会分工明确)</strong></p><h2 id="Pareto原则-测试发现的错误中80-很可能起源于20-的模块中"><a href="#Pareto原则-测试发现的错误中80-很可能起源于20-的模块中" class="headerlink" title="Pareto原则,测试发现的错误中80%很可能起源于20%的模块中"></a>Pareto原则,测试发现的错误中80%很可能起源于20%的模块中</h2><p><strong>测试发现的bug中80%很有可能来源于20%的模块中，这可以引入二八定律。就是出问题的模块不一定bug是均等的，bug有可能就出现在开发比较新的、陌生的20%的模块当中</strong></p><h2 id="设计测试用例时-应该考虑各种情况"><a href="#设计测试用例时-应该考虑各种情况" class="headerlink" title="设计测试用例时,应该考虑各种情况"></a>设计测试用例时,应该考虑各种情况</h2><p><strong>测试用例就是测什么东西？怎么测？应该把各种情况准备好，比如：软件问题、用户自身的问题、硬件问题等等……</strong></p><h2 id="对测试出的错误结果一定要有一个确认的过程-描述缺陷报告"><a href="#对测试出的错误结果一定要有一个确认的过程-描述缺陷报告" class="headerlink" title="对测试出的错误结果一定要有一个确认的过程(描述缺陷报告)"></a><strong>对测试出的错误结果一定要有一个确认的过程(描述缺陷报告)</strong></h2><p><strong>我们在做测试工作的时候，找到了bug等问题后，一定要做一个问题的描述，就是确认的过程.缺陷报告也就是错误报告，要用文字加图片的形式描述清楚.只有问题描述清楚了，程序员才能更快、更好的定位bug，方便改正bug,有利于提高软件的质量</strong>  </p><h2 id="制定严格的测试计划"><a href="#制定严格的测试计划" class="headerlink" title="制定严格的测试计划"></a>制定严格的测试计划</h2><p><strong>为防止工期延误，必须制定一个计划，并且这个计划要严格执行，计划多少阶段，什么时候完成一个阶段，一个阶段要完成什么工作，重要的安排多少人去完成什么工作</strong></p><h2 id="完全测试是不可能的-测试需要终止"><a href="#完全测试是不可能的-测试需要终止" class="headerlink" title="完全测试是不可能的,测试需要终止"></a>完全测试是不可能的,测试需要终止</h2><p><strong>比如我们做一款软件，是不可能一直测一直测，测到没有bug为止的。真正的软件工程的不是这样子的，我们完全测试到一点bug都没有是几乎不会发生的，测试的工作一定要终止.一般项目的工期都会有前、中、后的阶段，最后还有个项目整理阶段(或改错阶段)。按阶段工作，如前期工作整理好需求文档，需求文档对接一下，看看是否满足客户的需求，弄明白需求。中期的话，用户过来确认完成的阶段，给用户出一个半成品(demo)看一看。到最后产品上线之前肯定要有一个大的测试版本，这个版本也不是要做的太完美，工期短也没办法完成的这么完美.万一工期一到还有问题、错误的话,看情况处理。问题、错误不影响最终产品的上线、不影响核心的功能,可以往后拖。大家都知道，软件有各种版本，有1.1、1.2、2.3版本存在，每个版本更新也算一个个小工期，可以订下版本大版本号更新什么、小版本号更新什么。(1.0到2.0为大版本新功能更新(大功能迭代),1.1到1.2为小版本bug修复更新(小版本迭代)</strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190919222854.png" alt="版本号"><br></fancybox></p><h2 id="注意回归测试的关联性"><a href="#注意回归测试的关联性" class="headerlink" title="注意回归测试的关联性."></a>注意回归测试的关联性.</h2><p><strong>回归测试：指修改了旧代码后,重新进行测试以确认修改没有引入新的错误或导致其他代码产生错误。程序员将测试员提供的bug修改完后，这个bug还要给测试员重新测试。验证下这个bug是否已经解决了，有没有引发其他模块产生问题。程序中的若干模块都有关联的，有可能出现修改好bug后会引发其他模块产生新的bug</strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190919223217.png" alt="模块关联"><br></fancybox></p><h2 id="妥善保存一切测试过程文档"><a href="#妥善保存一切测试过程文档" class="headerlink" title="妥善保存一切测试过程文档"></a>妥善保存一切测试过程文档</h2><p><strong>软件工程的特点就是需求更改的比较频繁,测试过后记录的文档一定会有问题(当需求改了，前测试记录的东西就不适合了)，要随着版本(需求)的更新而更新.测试文档更新要保留前测试文档，然后复制前文档后更改名字就行。这样可以应对当更改需求不合适了，还可以根据前版本的测试文档返回软件的版本</strong><br><fancybox><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190919224523.png" alt="版本记录"><br></fancybox></p><p>参考资料(复读机源头)：</p><ul><li>👉 <a href="https://www.bilibili.com/video/av20159145?t=299&amp;p=2" target="_blank" rel="noopener">https://www.bilibili.com/video/av20159145?t=299&amp;p=2</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 测试理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化测试 </tag>
            
            <tag> 测试理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker环境搭建</title>
      <link href="/2019/09/17/docker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/09/17/docker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="Docker环境搭建"><a href="#Docker环境搭建" class="headerlink" title="Docker环境搭建"></a>Docker环境搭建</h1><p>安装平台：虚拟机win7 x64</p><p>虚拟机准备工作:</p><ul><li>网络设置为桥接<br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190918135629.png" alt="桥接网络"></li><li>虚拟机打开虚拟化技术(要在win7虚拟机打开前开启,否则会像下面呈不可选状态)<br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190918135839.png" alt="虚拟化"></li><li><del>虚拟机安装win7</del></li></ul><p><strong>到<a href="http://mirrors.aliyun.com/docker-toolbox/windows/docker-toolbox/" target="_blank" rel="noopener">阿里云</a>镜像下载Docker Toolbox,选择安装包(我选了日期最后的那个)</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190917233011.png" alt="docker-toolbox"></p><p><strong>双击安装包,安装目录自己安排</strong><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190917233413.png" alt="docker-toolbox.exe"></p><p><strong>安装期间一路点击下一步,安装完成后桌面会出现三个图标</strong><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190917234032.png" alt="Dock QuickStart"></p><p><strong>打开Docker QuickStart……图标,终端会一直卡在GitHub上,这是因为终端会到docker官方的github仓库去获取Boot2docker最新的版本</strong></p><p><em>原因和墙有关系,终端也有可能因为与github连接超时而报错</em></p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190917235903.png" alt="error"></p><p><strong><del>解决办法1：(在我虚拟机没用)</del></strong></p><ul><li>关闭docker终端,将电脑网络断开</li><li>进入docker toolbox的安装目录复制一份boot2docker<br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190918000839.png" alt="boot2docker"></li></ul><p>将boot2docker文件放到用户的<code>.docker\machine\cache</code>目录中,a2634是我win7的账号名(记得先清除cache目录的文件再放入boot2……文件)</p><p><em>(此<code>.docker</code>目录一定要打开一次docker quickstart才能生成)</em></p><blockquote><p>C:\Users\a2634.docker\machine\cache</p></blockquote><ul><li>双击打开docker qiuckstart……图标,随意敲击回车</li></ul><p>又有出现意外了,终端出现以下错误:<br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190918141804.png" alt="127.0.0.1"></p><p>不用怕,轻敲回车自动关闭终端,然后接着重新打开docker quickstart……,等终端跑出了Creating SSH key……字样后,赶紧的重新让虚拟机连接网络.</p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190918141723.png" alt="ssh key"></p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190918142640.png" alt="虚拟机开关,两小电脑的图标"></p><p><strong>解决方法2：</strong></p><p>可以行得通,但时间慢</p><p>方法步骤：</p><ul><li>使用站长工具ping测速工具,找github.com延迟最低的ip</li><li>将找到的ip放入host文件中的最后一行并保存</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">140.82.118.4  github.com</span><br></pre></td></tr></table></figure><ul><li>boot2docker文件下载速度快了点,但还是差不多用2、3个小时才能下载完(不一定这个时间能下完,看网络情况吧).</li></ul><p><strong>解决方法3：</strong></p><ul><li>最最可靠,挂梯子吧</li></ul><p><strong>幸运的是,用第一种方法成功了,终端出现了鲸鱼的图案</strong><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190918150932.png" alt="docker！！！！"></p><p><strong>跑下命令<code>docker run hello-world</code>,测试结束.docker可以使用了.</strong></p><p>可喜可贺,可喜可贺🎉🎉🎉</p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190918151303.png" alt="helloworld!"></p><p>参考资料：</p><ul><li><p><a href="https://www.runoob.com/docker/windows-docker-install.html" target="_blank" rel="noopener">https://www.runoob.com/docker/windows-docker-install.html</a></p></li><li><p><a href="https://www.cnblogs.com/CodeOcean/p/10923066.html" target="_blank" rel="noopener">https://www.cnblogs.com/CodeOcean/p/10923066.html</a></p></li><li><p><a href="https://blog.csdn.net/jiangjingxuan/article/details/54908272" target="_blank" rel="noopener">https://blog.csdn.net/jiangjingxuan/article/details/54908272</a></p></li><li><p><a href="https://blog.csdn.net/weixin_41430952/article/details/83745458" target="_blank" rel="noopener">https://blog.csdn.net/weixin_41430952/article/details/83745458</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试目的和原则</title>
      <link href="/2019/09/17/%E6%B5%8B%E8%AF%95%E7%9B%AE%E7%9A%84%E5%92%8C%E5%8E%9F%E5%88%99/"/>
      <url>/2019/09/17/%E6%B5%8B%E8%AF%95%E7%9B%AE%E7%9A%84%E5%92%8C%E5%8E%9F%E5%88%99/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="测试的目的："><a href="#测试的目的：" class="headerlink" title="测试的目的："></a>测试的目的：</h1><blockquote><p>是想以最少的人力,物力和时间找出软件中潜在的各种错误与缺陷,通过修正各种错误和缺陷提高软件质量,回避软件发布后由于潜在的软件缺陷和错误造成的隐患以及带来的商业风险.</p></blockquote><h1 id="测试的定义："><a href="#测试的定义：" class="headerlink" title="测试的定义："></a>测试的定义：</h1><blockquote><p>使用人工和自动手段来运行或测试某个系统的过程,其目的在于检验它是否满足规定的需求或是弄清预期结果与实际结果之间的差别</p></blockquote><h1 id="软件测试的原则"><a href="#软件测试的原则" class="headerlink" title="软件测试的原则"></a>软件测试的原则</h1><p>1.所有的测试都应追溯到用户需求（视频网站,点击后最大化）</p><p>2.应当把“尽早和不断地测试”作为座右铭</p><p>3.测试工作应该由独立的专业的软件测试机构来完成</p><p>4.Pareto原则,测试发现的错误中80%很可能起源于20%的模块中。</p><p>5.设计测试用例(测什么,怎么测？)时,应该考虑各种情况.</p><p>6.<strong>对测试出的错误结果一定要有一个确认的过程(描述缺陷报告).</strong></p><p>7.制定严格的测试计划</p><p>8.<strong>完全测试是不可能的,测试需要终止.</strong></p><p>9.注意回归测试的关联性.</p><blockquote><p>回归测试,指修改了旧代码后,重新进行测试以确认修改没有引入新的错误或导致其他代码产生错误</p></blockquote><p>10.妥善保存一切测试过程文档.</p><p>参考资料:</p><p><a href="https://www.bilibili.com/video/av20159145?t=291&amp;p=2" target="_blank" rel="noopener">https://www.bilibili.com/video/av20159145?t=291&amp;p=2</a></p>]]></content>
      
      
      <categories>
          
          <category> 测试理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化测试 </tag>
            
            <tag> 测试理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发环境搭建</title>
      <link href="/2019/09/15/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/09/15/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="Flutter环境搭建"><a href="#Flutter环境搭建" class="headerlink" title="Flutter环境搭建"></a>Flutter环境搭建</h1><h2 id="环境搭建前提"><a href="#环境搭建前提" class="headerlink" title="环境搭建前提:"></a>环境搭建前提:</h2><ul><li><del>Java Sdk</del></li><li><del>Android Sdk</del></li></ul><h2 id="Android-Studio安装与配置"><a href="#Android-Studio安装与配置" class="headerlink" title="Android Studio安装与配置"></a>Android Studio安装与配置</h2><p><strong>前往官网下载gradle</strong><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190916094022.png" alt><br><strong>将gradle的bin目录放入环境变量</strong></p><p><strong>下载<a href="https://developer.android.google.cn/" target="_blank" rel="noopener">Android Studio</a>,并配置好gradle、Android Sdk目录(指：在Android Studio中配置好)</strong><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190915220630.png" alt></p><p><strong>安装好flutter插件,重启AS(Dart插件会随着flutter插件安装的)</strong><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190916101012.png" alt><br><strong>现在可以创建flutter项目了,但还不行，需要配置flutter环境</strong><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190916105801.png" alt></p><h2 id="Flutter-Sdk安装与环境变量设置"><a href="#Flutter-Sdk安装与环境变量设置" class="headerlink" title="Flutter Sdk安装与环境变量设置"></a>Flutter Sdk安装与环境变量设置</h2><p><strong>前往<a href="https://flutter.dev/docs/development/tools/sdk/releases#windows" target="_blank" rel="noopener">官网</a>下载Flutter Sdk,选择Stable channel(稳定)版本</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190915163537.png" alt><br><strong>解压Flutter Sdk,并配置环境变量</strong></p><p><em>将Flutter Sdk安装目录里的bin目录添加到环境变量就可以了</em><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190915225926.png" alt></p><h2 id="使用flutter-doctor命令检查flutter环境"><a href="#使用flutter-doctor命令检查flutter环境" class="headerlink" title="使用flutter doctor命令检查flutter环境"></a>使用flutter doctor命令检查flutter环境</h2><p><strong>打勾✔是没有问题的,感叹号❗就需要注意了</strong><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190915231419.png" alt></p><blockquote><p>❗ Android licese status unknown.(没有许可证)</p></blockquote><p>运行以下命令,安装过程一路输入字母y</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter doctor --android-licenses</span><br></pre></td></tr></table></figure><p>⛔ 意外的是,当我运行以上命令时,cmd提示<br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190915232709.png" alt><br>解决办法：<br>cmd切换到D:\E\android-sdk\tools\bin目录下,即你Android SDK目录\tools\bin的路径,输入<code>sdkmanager --update</code>命令</p><p>⛔ 但执行上一条命令又又又报错了,网友说这是没有给Android Sdk许可证<br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190915234242.png" alt><br><del>结果还是不能用,重新安装Android Sdk吧</del></p><p>想了下,Android Studio都还没装,用什么flutter…😐,装好Android Studio后,加上Flutter插件,下面的错误修复了</p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190916110438.png" alt></p><blockquote><p>[√] Android Studio (version 3.5)</p></blockquote><p>再次运行此命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter doctor --android-licenses</span><br></pre></td></tr></table></figure><p>凡是见到以下命令出现,都输入y并回车<br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190916110642.png" alt></p><p>以下都是可以忽略的问题<br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190916110845.png" alt></p><blockquote><p>❗ IntelliJ IDEA Ultimate Edition (version 2019.1)</p></blockquote><p>提醒你该ide没有安装flutter、Dart插件.<br>反正已经安装了Android Studio,不用管</p><blockquote><p>❗ Connected device</p></blockquote><p>提醒你当前没有可以使用的真机和虚拟机可用</p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adb与Monkey命令的简单使用</title>
      <link href="/2019/09/13/Adb%E4%B8%8EMonkey%E5%91%BD%E4%BB%A4%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/09/13/Adb%E4%B8%8EMonkey%E5%91%BD%E4%BB%A4%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="Monkey命令效果展示"><a href="#Monkey命令效果展示" class="headerlink" title="Monkey命令效果展示"></a>Monkey命令效果展示</h1><p><img src="https://cdn.jsdelivr.net/gh/hake196/CDN/auto_test1.gif" alt="动图"></p><h2 id="Adb命令"><a href="#Adb命令" class="headerlink" title="Adb命令"></a>Adb命令</h2><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190913211501.png" alt></p><ul><li><p>显示Android设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure></li><li><p>连接Android设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect &lt;设备ip&gt;</span><br></pre></td></tr></table></figure></li><li><p>断开Android设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb disconnect &lt;设备ip&gt;</span><br></pre></td></tr></table></figure></li><li><p>安装app</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb install &lt;app文件路径&gt;</span><br></pre></td></tr></table></figure></li><li><p>从手机推送文件到电脑</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull &lt;手机文件路径&gt; &lt;电脑存放的路径&gt;</span><br></pre></td></tr></table></figure></li><li><p>列出手机所有的包名 (后面可加参数 )</p></li></ul><p>例:  -3 显示第三方包名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell pm list packages</span><br></pre></td></tr></table></figure><ul><li><p>列出手机的日志(有日志等级,后面可带参数)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat</span><br></pre></td></tr></table></figure></li><li><p>用adb shell进入data目录列出包名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br><span class="line">cd /data/data</span><br><span class="line">ls</span><br></pre></td></tr></table></figure></li><li><p>停止/启动 adb 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb kill-server</span><br><span class="line">adb start-server</span><br></pre></td></tr></table></figure></li></ul><h2 id="Monkey命令"><a href="#Monkey命令" class="headerlink" title="Monkey命令"></a>Monkey命令</h2><p><strong>使用前需搭建好环境</strong></p><ul><li><del>Java Jdk</del></li><li><del>Android Sdk</del></li></ul><p><strong>Monkey压力测试</strong></p><p><em>(Monkey模拟人在手机屏幕上胡乱的触摸，考验真机或程序是否稳定)</em></p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190913204416.png" alt></p><ul><li>使用前打开安卓模拟器或者USB连接真机(需要在安卓系统打开调试模式)</li><li><code>adb connect</code>命令连接设备</li><li>夜神模拟器连接需要cmd进入模拟器的安装目录，输入nox_adb.exe connect 127.0.0.1:62001即可成功连接</li></ul><p><strong>Monkey命令使用示范</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell monkey -p com.tenent.mm -v -v -v 5000</span><br></pre></td></tr></table></figure><p>1.参数 <code>-p &lt;包名&gt;</code> (忽略此参数可直接在后面加上随机测试次数)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell monkey -v -v -v 5000</span><br></pre></td></tr></table></figure><p>2.参数 <code>-v</code> 表示输出的日志详细度,<code>-v</code>越多日志就越详细,最多三个.</p><p>3.后面的数字代表随机测试次数,可按需求设置.</p><p>4.Monkey命令输出的日志可以输出到某个txt文件,格式为Monkey名令+空格+<code>&gt;</code>+空格+&lt;想输出的目录地址&gt;,adb logcat也可以,例 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell monkey -p com.tenent.mm -v -v -v 5000 &gt; d:\adb_log.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat &gt; d:\logcat.txt</span><br></pre></td></tr></table></figure><p>详细资料:</p><p><a href="https://blog.csdn.net/zhangmeng1314/article/details/82699316" target="_blank" rel="noopener">https://blog.csdn.net/zhangmeng1314/article/details/82699316</a></p><p><a href="https://www.cnblogs.com/kekouwen/archive/2018/11/21/9995635.html" target="_blank" rel="noopener">https://www.cnblogs.com/kekouwen/archive/2018/11/21/9995635.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 自动化测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android-SDK环境配置</title>
      <link href="/2019/09/12/Android-SDK%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/09/12/Android-SDK%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="Android-Sdk环境搭建-Win10平台"><a href="#Android-Sdk环境搭建-Win10平台" class="headerlink" title="Android Sdk环境搭建(Win10平台)"></a>Android Sdk环境搭建(Win10平台)</h1><h2 id="安装Java-Jdk-忽略"><a href="#安装Java-Jdk-忽略" class="headerlink" title="安装Java Jdk(忽略)"></a><del>安装Java Jdk(忽略)</del></h2><h2 id="下载Android-Sdk-exe安装包"><a href="#下载Android-Sdk-exe安装包" class="headerlink" title="下载Android Sdk.exe安装包"></a>下载<a href="http://tools.android-studio.org/index.php/sdk" target="_blank" rel="noopener">Android Sdk.exe</a>安装包</h2><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912090833.png" alt></p><h2 id="使用Ping检测工具"><a href="#使用Ping检测工具" class="headerlink" title="使用Ping检测工具"></a>使用<a href="http://ping.chinaz.com/" target="_blank" rel="noopener">Ping检测工具</a></h2><ul><li>查找dl.google.com和dl-ssl.google.com这两个网址 ping值不超时的ip 填入host文件,保存</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912102820.png" alt></p><h2 id="进入Android-sdk根目录中打开sdk-manager-exe"><a href="#进入Android-sdk根目录中打开sdk-manager-exe" class="headerlink" title="进入Android sdk根目录中打开sdk manager.exe"></a>进入Android sdk根目录中打开sdk manager.exe</h2><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912095311.png" alt></p><h2 id="选择要安装的包"><a href="#选择要安装的包" class="headerlink" title="选择要安装的包"></a>选择要安装的包</h2><ul><li><p>必须选</p><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912095442.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912095624.png" alt><br>  <img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912095702.png" alt></p></li><li><p>Android 版本按需求选</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2></li></ul><ul><li>点击Intall …… 按钮</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912100602.png" alt></p><ul><li>选择同意选框,然后安装</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/1568254031991.png" alt></p><h2 id="安装完成后添加环境变量"><a href="#安装完成后添加环境变量" class="headerlink" title="安装完成后添加环境变量"></a>安装完成后添加环境变量</h2><h3 id="需要添加两个变量-一个是sdk安装的根目录-另一个是sdk目录下的platform目录-adb工具的存放点"><a href="#需要添加两个变量-一个是sdk安装的根目录-另一个是sdk目录下的platform目录-adb工具的存放点" class="headerlink" title="需要添加两个变量,一个是sdk安装的根目录,另一个是sdk目录下的platform目录(adb工具的存放点)"></a>需要添加两个变量,一个是sdk安装的根目录,另一个是sdk目录下的platform目录(adb工具的存放点)</h3><ul><li>新建一个环境变量</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912094209.png" alt></p><ul><li>在path变量中添加两个变量</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912113111.png" alt></p><h2 id="测试Android-SDK环境"><a href="#测试Android-SDK环境" class="headerlink" title="测试Android-SDK环境"></a>测试Android-SDK环境</h2><h3 id="命令提示符中输入adb命令-成功效果如下："><a href="#命令提示符中输入adb命令-成功效果如下：" class="headerlink" title="命令提示符中输入adb命令,成功效果如下："></a>命令提示符中输入adb命令,成功效果如下：</h3><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190912104907.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 水文一篇 </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium基础</title>
      <link href="/2019/09/10/Selenium%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/09/10/Selenium%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="Selenium基础"><a href="#Selenium基础" class="headerlink" title="Selenium基础"></a>Selenium基础</h1><h2 id="脚本展示"><a href="#脚本展示" class="headerlink" title="脚本展示"></a>脚本展示</h2><p><img src="https://cdn.jsdelivr.net/gh/hake196/CDN/auto.gif" alt></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 执行此代码前，先下载好Google Chrome的Webdriver</span><br><span class="line"># webdriver文件放入Python安装目录下</span><br><span class="line"># 引入时间包，在需要缓慢加载页面的地方暂时停止</span><br><span class="line">import time</span><br><span class="line"># 关键的webdriver包，控制驱动打开chrome浏览器的关键</span><br><span class="line">from selenium import webdriver</span><br><span class="line"># 模拟键盘输入的Selenium包</span><br><span class="line">from selenium.webdriver.common.kes</span><br><span class="line"># 打开Chrome</span><br><span class="line">b = webdriver.Chrome</span><br><span class="line"># 模拟键盘在地址栏中输入百度地址</span><br><span class="line">b.get(&quot;http://www.baidu.com&quot;)</span><br><span class="line"># 查找搜索框的id元素</span><br><span class="line"># send_keys() 模仿键盘输入关键字</span><br><span class="line">b.find_element_by_id(&quot;ky&quot;).send_keys(&quot;bilibili&quot;)</span><br><span class="line"># click() 模拟鼠标左击</span><br><span class="line">b.find_element_by_id(&quot;su&quot;).click()</span><br><span class="line"># 等待5秒后再执行后面的代码</span><br><span class="line">time.sleep(5)</span><br><span class="line"># 通过xpath方法查找关联的元素</span><br><span class="line">b.find_element_by_xpath(&quot;\\h3@[class=&apos;t&apos;]/a&quot;).click</span><br><span class="line">time.sleep(5)</span><br><span class="line"># 关闭浏览器</span><br><span class="line">b.quit()</span><br></pre></td></tr></table></figure><h2 id="浏览器动作"><a href="#浏览器动作" class="headerlink" title="浏览器动作"></a>浏览器动作</h2><h3 id="启动浏览器"><a href="#启动浏览器" class="headerlink" title="启动浏览器"></a>启动浏览器</h3><h4 id="webdriver-Chrome"><a href="#webdriver-Chrome" class="headerlink" title="webdriver.Chrome()"></a><code>webdriver.Chrome()</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webdriver.Chrome()</span><br></pre></td></tr></table></figure><h3 id="浏览器地址栏输入地址"><a href="#浏览器地址栏输入地址" class="headerlink" title="浏览器地址栏输入地址"></a>浏览器地址栏输入地址</h3><h4 id="get"><a href="#get" class="headerlink" title="get()"></a><code>get()</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b = webdriver.Chrome()</span><br><span class="line">b.get(&quot;https://www.baidu.com&quot;)</span><br></pre></td></tr></table></figure><h3 id="关闭浏览器"><a href="#关闭浏览器" class="headerlink" title="关闭浏览器"></a>关闭浏览器</h3><h4 id="quit"><a href="#quit" class="headerlink" title="quit()"></a><code>quit()</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b = webdriver.Chrome()</span><br><span class="line">b.quit()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190910164740.png" alt></p><h3 id="返回"><a href="#返回" class="headerlink" title="返回"></a>返回</h3><h4 id="back"><a href="#back" class="headerlink" title="back()"></a><code>back()</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b = webdriver.Chrome()</span><br><span class="line">b.get(&quot;https://www.baidu.com&quot;)</span><br><span class="line">b.find_element_by_link_text(&quot;贴吧&quot;).click()</span><br><span class="line">b.back()</span><br></pre></td></tr></table></figure><h3 id="前进"><a href="#前进" class="headerlink" title="前进"></a>前进</h3><h4 id="forword"><a href="#forword" class="headerlink" title="forword()"></a><code>forword()</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">b = webdriver.Chrome()</span><br><span class="line">b.find_element_by_link_text(&quot;贴吧&quot;).click()</span><br><span class="line">b.back()</span><br><span class="line">time.sleep(5)</span><br><span class="line">b.forward()</span><br></pre></td></tr></table></figure><h3 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h3><h4 id="refresh"><a href="#refresh" class="headerlink" title="refresh()"></a><code>refresh()</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b = webdriver.Chrome()</span><br><span class="line">b.get(&quot;https://www.baidu.com&quot;)</span><br><span class="line">b.refresh() 页面都可以刷新</span><br></pre></td></tr></table></figure><h2 id="鼠标点击行为-常用"><a href="#鼠标点击行为-常用" class="headerlink" title="鼠标点击行为(常用)"></a>鼠标点击行为(常用)</h2><h3 id="鼠标左击-前提是找到元素"><a href="#鼠标左击-前提是找到元素" class="headerlink" title="鼠标左击(前提是找到元素)"></a>鼠标左击(前提是找到元素)</h3><h4 id="click"><a href="#click" class="headerlink" title="click()"></a><code>click()</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.find_by_link_text(&quot;贴吧&quot;).click()</span><br></pre></td></tr></table></figure><h2 id="元素查找"><a href="#元素查找" class="headerlink" title="元素查找"></a>元素查找</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">find_element_by_id()</span><br><span class="line">find_element_by_class()</span><br><span class="line">find_element_by_name()</span><br><span class="line">find_element_by_xpath()</span><br><span class="line">find_element_by_link_text()</span><br><span class="line">。。。</span><br></pre></td></tr></table></figure><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><h3 id="clear"><a href="#clear" class="headerlink" title="clear()"></a><code>clear()</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.find_element_by_id(&quot;kw&quot;).clear() 清除搜索框的内容</span><br></pre></td></tr></table></figure><h3 id="send-keys"><a href="#send-keys" class="headerlink" title="send.keys()"></a><code>send.keys()</code></h3><p><img src="https://cdn.jsdelivr.net/gh/hake196/My_imghome/ke196/20190910182857.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">send.keys(Keys.ENTER) 回车</span><br><span class="line">send.keys(Keys.CONTROL+&quot;A&quot;) 全选</span><br><span class="line">send.heys(Keys.CONTROL+&quot;S&quot;) 保存</span><br><span class="line">send.heys(Keys.CONTROL+&quot;Z&quot;) 撤销</span><br><span class="line">。。。</span><br></pre></td></tr></table></figure><hr><p>参考资料：<br><a href="https://www.jianshu.com/p/1531e12f8852" target="_blank" rel="noopener">https://www.jianshu.com/p/1531e12f8852</a></p>]]></content>
      
      
      <categories>
          
          <category> 自动化测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化测试 </tag>
            
            <tag> Selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python+Selenium环境搭建</title>
      <link href="/2019/09/09/Python-Selenium%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/09/09/Python-Selenium%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<!-- 阅读全文 --><h1 id="Python环境搭建"><a href="#Python环境搭建" class="headerlink" title="Python环境搭建"></a>Python环境搭建</h1><h3 id="1-官网下载安装包"><a href="#1-官网下载安装包" class="headerlink" title="1. 官网下载安装包"></a>1. <a href="https://www.python.org/" target="_blank" rel="noopener">官网</a>下载安装包</h3><p><img src="https://s2.ax1x.com/2019/09/09/nYY7WR.png" alt="nYY7WR.png"></p><h3 id="2-下载好安装包后双击安装"><a href="#2-下载好安装包后双击安装" class="headerlink" title="2. 下载好安装包后双击安装"></a>2. 下载好安装包后双击安装</h3><h3 id="3-勾选Add-Python-3-7……-选项，添加python环境变量，下一步……"><a href="#3-勾选Add-Python-3-7……-选项，添加python环境变量，下一步……" class="headerlink" title="3. 勾选Add Python 3.7…… 选项，添加python环境变量，下一步……"></a>3. 勾选Add Python 3.7…… 选项，添加python环境变量，下一步……</h3><p><img src="https://s2.ax1x.com/2019/09/09/nYYoFJ.png" alt="nYYoFJ.png"></p><h3 id="4-检查Python环境"><a href="#4-检查Python环境" class="headerlink" title="4. 检查Python环境"></a>4. 检查Python环境</h3><p>键盘处输入win+r组合键，输入cmd后回车，在光标处输入python。一般在环境变量中添加两个目录变量就可以了(一个是python安装目录，另一个是python安装根目录下的Script目录，后者目录是配置pip包管理工具用的)<br><img src="https://s2.ax1x.com/2019/09/09/nYY4wF.png" alt="nYY4wF.png"></p><h1 id="Selenium安装"><a href="#Selenium安装" class="headerlink" title="Selenium安装"></a>Selenium安装</h1><h3 id="5-测试下pip"><a href="#5-测试下pip" class="headerlink" title="5. 测试下pip"></a>5. 测试下pip</h3><p><img src="https://s2.ax1x.com/2019/09/09/nYYheU.png" alt="nYYheU.png"></p><h3 id="6-安装Selenium"><a href="#6-安装Selenium" class="headerlink" title="6. 安装Selenium"></a>6. 安装Selenium</h3><p>输入pip install selenium，安装selenium包<br><img src="https://s2.ax1x.com/2019/09/09/nYYRyV.png" alt="nYYRyV.png"></p><h3 id="7-pip-V-命令检查pip版本"><a href="#7-pip-V-命令检查pip版本" class="headerlink" title="7. pip -V 命令检查pip版本"></a>7. pip -V 命令检查pip版本</h3><p>安装不顺利，pip版本不符合要求，根据系统提示输入命令更新pip<br><img src="https://s2.ax1x.com/2019/09/09/nYYWLT.png" alt="nYYWLT.png"></p><h1 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h1><h3 id="8-python-selenium环境搭建完成，个人推荐使用pycharm-ide-编译py文件较舒服"><a href="#8-python-selenium环境搭建完成，个人推荐使用pycharm-ide-编译py文件较舒服" class="headerlink" title="8. python+selenium环境搭建完成，个人推荐使用pycharm ide 编译py文件较舒服"></a>8. python+selenium环境搭建完成，个人推荐使用<a href="http://www.jetbrains.com/" target="_blank" rel="noopener">pycharm</a> ide 编译py文件较舒服</h3><p><img src="https://s2.ax1x.com/2019/09/09/nYY5o4.png" alt="nYY5o4.png"></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化测试 </tag>
            
            <tag> Selenium </tag>
            
            <tag> Python </tag>
            
            <tag> Web测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
